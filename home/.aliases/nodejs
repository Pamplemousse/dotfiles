# These commands use the `pamplemousse/nodejs` image and expose a port.
typeset -A commands_and_ports
commands_and_ports=(
  http-server 8080
  json-server 3000
  livedown 1337
)

for COMMAND PORT in ${(kv)commands_and_ports}; do
  if ! command -v $COMMAND 2>&1 >/dev/null; then
    function "${COMMAND}_with_port" () {
      COMMAND=$1
      PORT=$2

      # `${array[@]:n}` slice `array`, taking all elements from element `n` to the last one.
      docker run \
        --name $COMMAND \
        --rm -it \
        --publish $PORT:$PORT \
        --user $(id -u):$(id -g) \
        --volume $(pwd):/data \
        --workdir /data \
        pamplemousse/nodejs \
        $COMMAND ${@[@]:3}
    }

    # Currying!
    alias $COMMAND="${COMMAND}_with_port $COMMAND $PORT"
  fi
done

# These commands use the `pamplemousse/nodejs` image without exposing ports.
for COMMAND (jsdoc prettier standard yarn); do
  if ! command -v $COMMAND 2>&1 >/dev/null; then
    function $COMMAND () {
      docker run \
        --name $0 \
        --rm \
        --user $(id -u):$(id -g) \
        --volume $(pwd):/data \
        --workdir /data \
        pamplemousse/nodejs \
        $0 $@
    }
  fi
done

# These commands use the official `node` image without exposing ports.
for COMMAND (node npm); do
  if ! command -v $COMMAND 2>&1 >/dev/null; then
    function $COMMAND () {
      docker run \
        --rm -it \
        --user $(id -u):$(id -g) \
        --volume $(pwd):/data \
        --workdir /data \
        node \
        $0 $@
    }
  fi
done
